
import { useState, useEffect } from 'react';
import { supabase } from '@/integrations/supabase/client';
import { useAuth } from '@/hooks/useAuth';

export interface Patient {
  id: string;
  user_id: string;
  full_name: string;
  date_of_birth: string;
  gender: string;
  phone: string;
  emergency_contact_name: string;
  emergency_contact_phone: string;
  insurance_info: any;
  patient_id: string;
  profile_photo_url: string;
  created_at: string;
  updated_at: string;
}

export const usePatient = () => {
  const { user } = useAuth();
  const [patient, setPatient] = useState<Patient | null>(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    if (user) {
      fetchPatient();
    } else {
      setPatient(null);
      setLoading(false);
    }
  }, [user]);

  const fetchPatient = async () => {
    if (!user) return;
    
    try {
      const { data, error } = await supabase
        .from('patients')
        .select('*')
        .eq('user_id', user.id)
        .single();

      if (error) {
        console.error('Error fetching patient:', error);
      } else {
        setPatient(data);
      }
    } catch (error) {
      console.error('Error fetching patient:', error);
    } finally {
      setLoading(false);
    }
  };

  const updatePatient = async (updates: Partial<Patient>) => {
    if (!user || !patient) return;

    try {
      const { data, error } = await supabase
        .from('patients')
        .update(updates)
        .eq('user_id', user.id)
        .select()
        .single();

      if (error) {
        console.error('Error updating patient:', error);
        throw error;
      }

      setPatient(data);
      return data;
    } catch (error) {
      console.error('Error updating patient:', error);
      throw error;
    }
  };

  const generateVisitQR = async (hospitalId: string, visitReason: string) => {
    if (!patient) return;

    try {
      const { data, error } = await supabase
        .from('patient_visits')
        .insert({
          patient_id: patient.id,
          hospital_id: hospitalId,
          visit_reason: visitReason,
          status: 'scheduled',
          qr_code: '' // This will be auto-generated by trigger
        })
        .select()
        .single();

      if (error) {
        console.error('Error creating visit:', error);
        throw error;
      }

      return data;
    } catch (error) {
      console.error('Error creating visit:', error);
      throw error;
    }
  };

  return {
    patient,
    loading,
    updatePatient,
    generateVisitQR,
    refetch: fetchPatient
  };
};
